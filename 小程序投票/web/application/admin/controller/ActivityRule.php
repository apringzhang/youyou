<?php

namespace app\admin\controller;

use think\Exception;

class ActivityRule extends Common {

    protected function _initialize() {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function index() {
        $rule_name = input('post.rule_name');
        $this->assign('rule_name', $rule_name);
        $pageNum = 1;
        if (is_numeric(input('post.pageNum'))) {
            $pageNum = input('post.pageNum');
        }
        $this->assign('page_num', $pageNum);
        $num_per_page = 20;
        $data['num_per_page'] = $num_per_page;
        $data['rule_name'] = $rule_name;
        $data['pageNum'] = $pageNum;
        $activityRuleModel = new \app\admin\model\ActivityRule();
        $list = $activityRuleModel->getList($rule_name, $pageNum, $num_per_page);
        $data['list'] = $list;

        $count = $activityRuleModel->getCount($rule_name);
        $data['count'] = $count;
        return view('', $data);
    }

    public function add() {
        $id = input('get.id');
        $this->assign('id', $id);
        return view();
    }

    public function doAdd() {
        $data = input('post.');
        if (empty($data['rule_type'])) {
            return json([
                'statusCode' => 300,
                'message' => '请选择规则类型',
            ]);
        }
        $activityRuleModel = new \app\admin\model\ActivityRule();
        try {
            $result = $activityRuleModel->doAdd($data);
        } catch (Exception $e) {
            return json([
                'statusCode' => 300,
                'message' => $e->getMessage(),
            ]);
        }
        return json([
            'statusCode' => 200,
            'message' => '添加成功',
            'navTabId' => 'activityRuleManage',
            'callbackType' => 'closeCurrent',
        ]);
    }

    public function modify() {
        $id = input('get.id');
        $this->assign('id', $id);
        $activityRuleModel = new \app\admin\model\ActivityRule();
        $info = $activityRuleModel->modify($id);
//        dump($info);
        return view('', $info);
    }

    public function doModify() {
        $id = input('get.id');
        $data = input('post.');
        if (empty($data['rule_type'])) {
            return json([
                'statusCode' => 300,
                'message' => '请选择规则类型',
            ]);
        }
        $activityRuleModel = new \app\admin\model\ActivityRule();
        try {
            $result = $activityRuleModel->doModify($id, $data);
        } catch (Exception $e) {
            return json([
                'statusCode' => 300,
                'message' => $e->getMessage(),
            ]);
        }
        return json([
            'statusCode' => 200,
            'message' => '修改成功',
            'navTabId' => 'activityRuleManage',
            'callbackType' => 'closeCurrent',
        ]);
    }
    
    public function doDelete(){
        $id = input('get.id');
        $activityRuleModel = new \app\admin\model\ActivityRule();
        try {
            $result = $activityRuleModel->doDelete($id);
        } catch (Exception $e) {
            return json([
                'statusCode' => 300,
                'message' => $e->getMessage(),
            ]);
        }
        return json([
            'statusCode' => 200,
            'message' => '删除成功',
            'navTabId' => 'activityRuleManage',
        ]);
    }

    /**
     * 根据规则类型加载页面
     */
    public function getFormContent() {
        $type = input('get.jump');
        $id = input('get.id');
        $this->assign('type', $type);
        if (!empty($id)) {
            $activityRuleModel = new \app\admin\model\ActivityRule();
            $info = $activityRuleModel->modify($id);
        } else {
            $info = ['rule_type'=>$type];
        }
        if ($type == 1) {
            return $this->fetch('activity_rule/formContent1', $info);
        } else if ($type == 2) {
            return $this->fetch('activity_rule/formContent1', $info);
        } else if ($type == 3) {
            return $this->fetch('activity_rule/formContent2', $info);
        } else if ($type == 4) {
            return $this->fetch('activity_rule/formContent3', $info);
        }
    }

}
